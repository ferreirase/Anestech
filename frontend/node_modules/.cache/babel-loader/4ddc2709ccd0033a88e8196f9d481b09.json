{"ast":null,"code":"var _jsxFileName = \"/home/ferreira/Desktop/Projects/anestech/frontend/src/pages/Dashboard/index.tsx\";\n\n/* eslint-disable no-nested-ternary */\n\n/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { Header } from './styles';\nimport ActionsButtons from './actionsButtons';\nimport Loader from '../../components/Loader';\nimport api from '../../services/apiClient';\n\nconst Dashboard = () => {\n  const [loading, setLoading] = useState(true);\n  const [tasks, setTasks] = useState([]);\n  const [message, setMessage] = useState('');\n  const token = localStorage.getItem('@GoBarber:token');\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n    async function getTasks() {\n      try {\n        const response = await api.get('tasks', config);\n\n        if (response.data.message) {\n          setMessage(response.data.message);\n        }\n\n        setTasks(response.data);\n        setLoading(false);\n      } catch (error) {\n        setTasks([]);\n        setLoading(false);\n        setMessage(':( Erro na conexão! Tente novamente em minutos.');\n      }\n    }\n\n    setTimeout(() => {\n      getTasks();\n    }, 2000);\n    console.log(tasks);\n  }, [config]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"TASKS\"), /*#__PURE__*/React.createElement(ActionsButtons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }\n  }) : null);\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/ferreira/Desktop/Projects/anestech/frontend/src/pages/Dashboard/index.tsx"],"names":["React","useEffect","useState","Header","ActionsButtons","Loader","api","Dashboard","loading","setLoading","tasks","setTasks","message","setMessage","token","localStorage","getItem","config","headers","Authorization","getTasks","response","get","data","error","setTimeout","console","log"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAgC,UAAhC;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;;AAEA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMY,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAd;AAEA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,UAASL,KAAM;AAAjC;AADI,GAAf;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,mBAAemB,QAAf,GAA0B;AACxB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,GAAJ,CAAQ,OAAR,EAAiBL,MAAjB,CAAvB;;AAEA,YAAII,QAAQ,CAACE,IAAT,CAAcX,OAAlB,EAA2B;AACzBC,UAAAA,UAAU,CAACQ,QAAQ,CAACE,IAAT,CAAcX,OAAf,CAAV;AACD;;AAEDD,QAAAA,QAAQ,CAACU,QAAQ,CAACE,IAAV,CAAR;AACAd,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OATD,CASE,OAAOe,KAAP,EAAc;AACdb,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,QAAAA,UAAU,CAAC,iDAAD,CAAV;AACD;AACF;;AAEDY,IAAAA,UAAU,CAAC,MAAM;AACfL,MAAAA,QAAQ;AACT,KAFS,EAEP,IAFO,CAAV;AAIAM,IAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACD,GAxBQ,EAwBN,CAACO,MAAD,CAxBM,CAAT;AAyBA,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKGT,OAAO,gBAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAgB,IAL1B,CADF;AASD,CA5CD;;AA8CA,eAAeD,SAAf","sourcesContent":["/* eslint-disable no-nested-ternary */\n/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { Header, Message } from './styles';\nimport Accordion from '../../components/Accordion';\nimport ActionsButtons from './actionsButtons';\nimport Loader from '../../components/Loader';\nimport api from '../../services/apiClient';\n\nconst Dashboard: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const [tasks, setTasks] = useState([]);\n  const [message, setMessage] = useState('');\n  const token = localStorage.getItem('@GoBarber:token');\n\n  const config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n    async function getTasks() {\n      try {\n        const response = await api.get('tasks', config);\n\n        if (response.data.message) {\n          setMessage(response.data.message);\n        }\n\n        setTasks(response.data);\n        setLoading(false);\n      } catch (error) {\n        setTasks([]);\n        setLoading(false);\n        setMessage(':( Erro na conexão! Tente novamente em minutos.');\n      }\n    }\n\n    setTimeout(() => {\n      getTasks();\n    }, 2000);\n\n    console.log(tasks);\n  }, [config]);\n  return (\n    <>\n      <Header>\n        <h2>TASKS</h2>\n        <ActionsButtons />\n      </Header>\n      {loading ? <Loader /> : null}\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}