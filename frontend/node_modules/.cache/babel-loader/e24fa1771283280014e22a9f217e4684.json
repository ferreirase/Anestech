{"ast":null,"code":"var _jsxFileName = \"/home/ferreira/Desktop/Projects/anestech/frontend/src/components/Loader/index.tsx\";\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles({\n  root: {\n    width: '75%',\n    position: 'relative',\n    top: '200px',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  }\n});\nexport default function LinearBuffer() {\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(0);\n  const [buffer, setBuffer] = React.useState(10); // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n  const progressRef = React.useRef(() => {});\n  React.useEffect(() => {\n    progressRef.current = () => {\n      if (progress > 100) {\n        setProgress(0);\n        setBuffer(10);\n      } else {\n        const diff = Math.random() * 10;\n        const diff2 = Math.random() * 10;\n        setProgress(progress + diff);\n        setBuffer(progress + diff + diff2);\n      }\n    };\n  });\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      progressRef.current();\n    }, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, {\n    variant: \"buffer\",\n    value: progress,\n    valueBuffer: buffer,\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/ferreira/Desktop/Projects/anestech/frontend/src/components/Loader/index.tsx"],"names":["React","makeStyles","LinearProgress","useStyles","root","width","position","top","marginLeft","marginRight","LinearBuffer","classes","progress","setProgress","useState","buffer","setBuffer","progressRef","useRef","useEffect","current","diff","Math","random","diff2","timer","setInterval","clearInterval","color"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC;AAC3BG,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,KADH;AAEJC,IAAAA,QAAQ,EAAE,UAFN;AAGJC,IAAAA,GAAG,EAAE,OAHD;AAIJC,IAAAA,UAAU,EAAE,MAJR;AAKJC,IAAAA,WAAW,EAAE;AALT;AADqB,CAAD,CAA5B;AAUA,eAAe,SAASC,YAAT,GAAwB;AACrC,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0Bb,KAAK,CAACc,QAAN,CAAe,CAAf,CAAhC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,KAAK,CAACc,QAAN,CAAe,EAAf,CAA5B,CAHqC,CAKrC;;AACA,QAAMG,WAAW,GAAGjB,KAAK,CAACkB,MAAN,CAAa,MAAM,CAAE,CAArB,CAApB;AACAlB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpBF,IAAAA,WAAW,CAACG,OAAZ,GAAsB,MAAM;AAC1B,UAAIR,QAAQ,GAAG,GAAf,EAAoB;AAClBC,QAAAA,WAAW,CAAC,CAAD,CAAX;AACAG,QAAAA,SAAS,CAAC,EAAD,CAAT;AACD,OAHD,MAGO;AACL,cAAMK,IAAI,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAA7B;AACA,cAAMC,KAAK,GAAGF,IAAI,CAACC,MAAL,KAAgB,EAA9B;AACAV,QAAAA,WAAW,CAACD,QAAQ,GAAGS,IAAZ,CAAX;AACAL,QAAAA,SAAS,CAACJ,QAAQ,GAAGS,IAAX,GAAkBG,KAAnB,CAAT;AACD;AACF,KAVD;AAWD,GAZD;AAcAxB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpB,UAAMM,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC9BT,MAAAA,WAAW,CAACG,OAAZ;AACD,KAFwB,EAEtB,GAFsB,CAAzB;AAIA,WAAO,MAAM;AACXO,MAAAA,aAAa,CAACF,KAAD,CAAb;AACD,KAFD;AAGD,GARD,EAQG,EARH;AAUA,sBACE;AAAK,IAAA,SAAS,EAAEd,OAAO,CAACP,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,OAAO,EAAC,QADV;AAEE,IAAA,KAAK,EAAEQ,QAFT;AAGE,IAAA,WAAW,EAAEG,MAHf;AAIE,IAAA,KAAK,EAAE;AAAEa,MAAAA,KAAK,EAAE;AAAT,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '75%',\n    position: 'relative',\n    top: '200px',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n});\n\nexport default function LinearBuffer() {\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(0);\n  const [buffer, setBuffer] = React.useState(10);\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  const progressRef = React.useRef(() => {});\n  React.useEffect(() => {\n    progressRef.current = () => {\n      if (progress > 100) {\n        setProgress(0);\n        setBuffer(10);\n      } else {\n        const diff = Math.random() * 10;\n        const diff2 = Math.random() * 10;\n        setProgress(progress + diff);\n        setBuffer(progress + diff + diff2);\n      }\n    };\n  });\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      progressRef.current();\n    }, 500);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress\n        variant=\"buffer\"\n        value={progress}\n        valueBuffer={buffer}\n        style={{ color: '#fff' }}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}