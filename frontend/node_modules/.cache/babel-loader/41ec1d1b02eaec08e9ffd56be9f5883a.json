{"ast":null,"code":"var _jsxFileName = \"/home/ferreira/Desktop/Projects/anestech/frontend/src/pages/CreateTask/index.tsx\";\nimport React, { useRef, useCallback } from 'react';\nimport { Header } from './style';\nimport ActionsButtons from './actionsButtons';\n\nconst CreateTask = () => {\n  const formRef = useRef(null);\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('E-mail obrigatório').email('Digite um e-mail válido'),\n        password: Yup.string().required('Senha obrigatória')\n      });\n      await schema.validate(data, {\n        abortEarly: false // retorna todos os erros de uma vez só\n\n      });\n      await signIn({\n        email: data.email,\n        password: data.password\n      });\n      history.push('/dashboard');\n    } catch (error) {\n      if (error instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(error);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      } // disparar um toast\n\n\n      addToast({\n        type: 'error',\n        title: 'Erro na autenticação',\n        description: 'Ocorreu um erro ao fazer login. Cheque as credenciais.'\n      });\n    }\n  }, [signIn, addToast, history]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Create Task\"), /*#__PURE__*/React.createElement(ActionsButtons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Fa\\xE7a seu logon\"), /*#__PURE__*/React.createElement(Input, {\n    icon: FiMail,\n    name: \"email\",\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    icon: FiLock,\n    name: \"password\",\n    placeholder: \"Senha\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Entrar\")));\n};\n\nexport default CreateTask;","map":{"version":3,"sources":["/home/ferreira/Desktop/Projects/anestech/frontend/src/pages/CreateTask/index.tsx"],"names":["React","useRef","useCallback","Header","ActionsButtons","CreateTask","formRef","handleSubmit","data","current","setErrors","schema","Yup","object","shape","email","string","required","password","validate","abortEarly","signIn","history","push","error","ValidationError","errors","getValidationErrors","addToast","type","title","description","FiMail","FiLock"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,WAAxB,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,SAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,UAAoB,GAAG,MAAM;AACjC,QAAMC,OAAO,GAAGL,MAAM,CAAc,IAAd,CAAtB;AAEA,QAAMM,YAAY,GAAGL,WAAW,CAC9B,MAAOM,IAAP,IAAgC;AAC9B,QAAI;AAAA;;AACF,0BAAAF,OAAO,CAACG,OAAR,sEAAiBC,SAAjB,CAA2B,EAA3B;AACA,YAAMC,MAAM,GAAGC,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,QAAAA,KAAK,EAAEH,GAAG,CAACI,MAAJ,GACJC,QADI,CACK,oBADL,EAEJF,KAFI,CAEE,yBAFF,CADyB;AAIhCG,QAAAA,QAAQ,EAAEN,GAAG,CAACI,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB;AAJsB,OAAnB,CAAf;AAOA,YAAMN,MAAM,CAACQ,QAAP,CAAgBX,IAAhB,EAAsB;AAC1BY,QAAAA,UAAU,EAAE,KADc,CACP;;AADO,OAAtB,CAAN;AAIA,YAAMC,MAAM,CAAC;AACXN,QAAAA,KAAK,EAAEP,IAAI,CAACO,KADD;AAEXG,QAAAA,QAAQ,EAAEV,IAAI,CAACU;AAFJ,OAAD,CAAZ;AAKAI,MAAAA,OAAO,CAACC,IAAR,CAAa,YAAb;AACD,KAnBD,CAmBE,OAAOC,KAAP,EAAc;AACd,UAAIA,KAAK,YAAYZ,GAAG,CAACa,eAAzB,EAA0C;AAAA;;AACxC,cAAMC,MAAM,GAAGC,mBAAmB,CAACH,KAAD,CAAlC;AACA,6BAAAlB,OAAO,CAACG,OAAR,wEAAiBC,SAAjB,CAA2BgB,MAA3B;AAEA;AACD,OANa,CAQd;;;AACAE,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,OADC;AAEPC,QAAAA,KAAK,EAAE,sBAFA;AAGPC,QAAAA,WAAW,EAAE;AAHN,OAAD,CAAR;AAKD;AACF,GApC6B,EAqC9B,CAACV,MAAD,EAASO,QAAT,EAAmBN,OAAnB,CArC8B,CAAhC;AAwCA,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEhB,OAAX;AAAoB,IAAA,YAAY,EAAC,KAAjC;AAAuC,IAAA,QAAQ,EAAEC,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEyB,MAAb;AAAqB,IAAA,IAAI,EAAC,OAA1B;AAAkC,IAAA,WAAW,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAKE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEC,MADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAYE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,CALF,CADF;AAsBD,CAjED;;AAmEA,eAAe5B,UAAf","sourcesContent":["import React, { useRef, useCallback } from 'react';\nimport { Header } from './style';\nimport ActionsButtons from './actionsButtons';\n\nconst CreateTask: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail válido'),\n          password: Yup.string().required('Senha obrigatória'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false, // retorna todos os erros de uma vez só\n        });\n\n        await signIn({\n          email: data.email,\n          password: data.password,\n        });\n\n        history.push('/dashboard');\n      } catch (error) {\n        if (error instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(error);\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        // disparar um toast\n        addToast({\n          type: 'error',\n          title: 'Erro na autenticação',\n          description: 'Ocorreu um erro ao fazer login. Cheque as credenciais.',\n        });\n      }\n    },\n    [signIn, addToast, history],\n  );\n\n  return (\n    <>\n      <Header>\n        <h2>Create Task</h2>\n        <ActionsButtons />\n      </Header>\n      <Form ref={formRef} autoComplete=\"off\" onSubmit={handleSubmit}>\n        <h1>Faça seu logon</h1>\n\n        <Input icon={FiMail} name=\"email\" placeholder=\"E-mail\" />\n\n        <Input\n          icon={FiLock}\n          name=\"password\"\n          placeholder=\"Senha\"\n          type=\"password\"\n        />\n\n        <Button type=\"submit\">Entrar</Button>\n      </Form>\n    </>\n  );\n};\n\nexport default CreateTask;\n"]},"metadata":{},"sourceType":"module"}